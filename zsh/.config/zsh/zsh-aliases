#!/bin/sh

# Colorize grep output
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

# Color the list funcition
alias ls='ls -G'

alias spt-reset="brew services restart spotifyd"

record() {
  ffmpeg -f avfoundation -i "3:1" -r 30 -c:v h264 -crf 23 -pix_fmt yuv420p -c:a aac output.mp4
}

alias pacman="sudo pacman"

decrypt_dotfiles() {
  encrypted_files=(
    ~/.dotfiles/github-copilot/.config/github-copilot/apps.json
    ~/.dotfiles/github-copilot/.config/github-copilot/hosts.json
    ~/.dotfiles/ssh/.ssh/id_rsa
    ~/.dotfiles/ssh/.ssh/id_rsa.pub
    ~/.dotfiles/task/.taskrc
    ~/.dotfiles/zsh/.config/zsh/zsh-keys
  )

  ansible-vault decrypt "${encrypted_files[@]}"
}

encrypt_dotfiles() {
  encrypted_files=(
    ~/.dotfiles/github-copilot/.config/github-copilot/apps.json
    ~/.dotfiles/github-copilot/.config/github-copilot/hosts.json
    ~/.dotfiles/ssh/.ssh/id_rsa
    ~/.dotfiles/ssh/.ssh/id_rsa.pub
    ~/.dotfiles/task/.taskrc
    ~/.dotfiles/zsh/.config/zsh/zsh-keys
  )

  ansible-vault encrypt "${encrypted_files[@]}"
}
# Add to your ~/.zshrc
if [[ "$OSTYPE" == "linux-gnu"* ]]; then
  if command -v xclip >/dev/null 2>&1; then
    alias pbcopy='xclip -selection clipboard'
    alias pbpaste='xclip -selection clipboard -o'
  elif command -v wl-copy >/dev/null 2>&1 && command -v wl-paste >/dev/null 2>&1; then
    alias pbcopy='wl-copy'
    alias pbpaste='wl-paste'
  fi
fi

if [[ "$OSTYPE" == "linux-gnu"* ]]; then
  sound() {
    pavucontrol
  }
  battery_status() {
    for BAT in /sys/class/power_supply/BAT*; do
      [ -e "$BAT" ] || continue  # Skip if the path doesn't exist
      BAT_NAME=$(basename "$BAT")
      STATUS=$(<"$BAT/status")
      CAPACITY=$(<"$BAT/capacity")
      echo "$BAT_NAME: $STATUS, $CAPACITY%"
    done
  }
fi

